#######################################
# 정보통계학과 
# 학번 : 2019015020 
# 이름 : 오진석
# 작성일 : 12.07
#######################################

## 힙 정렬
# 힘 클래스를 이용한 정렬
# 추가적인 메모리를 필요로 함

## 시간복잡도
# O(n log n)

from MaxHeap import MaxHeap # 최대힙 클래스

def heapSort(data): 
    heap = MaxHeap() # 최대 힙 사용
    for n in data: # 모든 항목들을 힙에 넣음
        heap.insert(n)
    
    print('heap에 대이터 삽입한 결과 : ', end='')
    heap.display()
    for i in range(1, len(data)+1): # 1, 2, 3, ... , n 
        data[-i] = heap.delete() # 앤 뒤에서 앞으로 -1, -2, ...
        print(data[-i],'를 제거한 다음의 ',end='')
        heap.display()

if __name__ == "__main__":
    dataL = [5, 3, 8, 4, 9, 1, 6, 2, 7] 
    print('data     :', dataL)
    heapSort(dataL)
    print('HeapSort :', dataL)

'''
data     : [5, 3, 8, 4, 9, 1, 6, 2, 7]
heap에 대이터 삽입한 결과 : 힙트리:  [9, 8, 6, 7, 4, 1, 5, 2, 3]
9 를 제거한 다음의 힙트리:  [8, 7, 6, 3, 4, 1, 5, 2]
8 를 제거한 다음의 힙트리:  [7, 4, 6, 3, 2, 1, 5]
7 를 제거한 다음의 힙트리:  [6, 4, 5, 3, 2, 1]
6 를 제거한 다음의 힙트리:  [5, 4, 1, 3, 2]
5 를 제거한 다음의 힙트리:  [4, 3, 1, 2]
4 를 제거한 다음의 힙트리:  [3, 2, 1]
3 를 제거한 다음의 힙트리:  [2, 1]
2 를 제거한 다음의 힙트리:  [1]
1 를 제거한 다음의 힙트리:  []
HeapSort : [1, 2, 3, 4, 5, 6, 7, 8, 9
'''





















