#######################################
# 정보통계학과 
# 학번 : 2019015020 
# 이름 : 오진석
# 작성일 : 10.05
#######################################

# 스택이란
# 스택(stack) : 쌓아 놓은 더미
# 후입선출(LIFO) : 가장 최근에 들어온 데이터가 가장 먼저 나감 

# 스택의 ADT(추상자료형)
# Stack() : 비어있는 새로운 스택을 만든다.
# isEmpty() : 스택이 비어있으면 T, 아니면 F를 반환한다.
# push() : 항목 e를 스택의 맨 위에 추가한다.
# pop() : 스택의 맨 위에 있는 항목을 꺼내 반환한다.
# peek() : 스택의 맨 위에 있는 항목을 삭제하지 않고 반환한다. 
# size() : 스택 내의 모든 항목들의 개수를 반환한다.
# clear() : 스택을 공백 상태로 만든다.

# 스택의 용도
# 되돌리기
# 함수 호출
# 괄호검사
# 계산기 : 후위표시식 계산, 중위 표기식의 후위 표기식 변환
# 미로 탐색

# 스택의 구현
# 항목의 삽입/ 삭제 위치 : 파이썬 리스트의 후단을 사용하는 경우가 유리하다.

# 스택의 함수 구현
def isEmpty():
    return len(top) == 0  # 계산 결과가 True/False로 반환이 된다.

def push(item):
    top.append(item)  # 리스트 맨뒤에 item을 추가한다.
    
def pop():
    if not isEmpty(): # 공백상태가 아니면
        return top.pop(-1) # 리스트의 맨 뒤에서 항목을 하나 꺼내고 반환

def peek():
    if not isEmpty(): # 공백상태가 아니면
        return top[-1]  # 맨 뒷 항목을 반환하고 삭제하지 않는다.

def size(): 
    return len(top) # 스택의 크기

def clear():
    global top # top는 전역변수 임을 지정함
    top = [] # 스택의 초기화
    
# 본문
if __name__ == "__main__":
    top = []
    
    for i in range(1, 6):
        push(i)
        
    print(' push 5회: ', top) # [1, 2, 3, 4, 5]
    print(' pop() --> ', pop()) # 5
    print(' pop() --> ', pop()) # 4
    print(' pop 2회: ', top) # [1, 2, 3]
    
    push('홍길동')
    push('이순신')
    print(' pop() --> ', pop()) # 이순신
    print(' pop 1회: ', top) # [1, 2, 3, '홍길동']

'''
 push 5회:  [1, 2, 3, 4, 5]
 pop() -->  5
 pop() -->  4
 pop 2회:  [1, 2, 3]
 pop() -->  이순신
 pop 1회:  [1, 2, 3, '홍길동']
'''











